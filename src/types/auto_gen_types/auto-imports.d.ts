/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// noinspection JSUnusedGlobalSymbols
// Generated by unplugin-auto-import
export {}
declare global {
  const $http: typeof import('../../api/config')['$http']
  const AutoTipUtils: typeof import('../../hooks/autoTipApis')['AutoTipUtils']
  const CORE_NAMESPACES: typeof import('../../hooks/useCore')['CORE_NAMESPACES']
  const EDITOR_DOM_ID: typeof import('../../hooks/useEditor')['EDITOR_DOM_ID']
  const EffectScope: typeof import('vue')['EffectScope']
  const ElMessage: typeof import('element-plus/es')['ElMessage']
  const ElMessageBox: typeof import('element-plus/es')['ElMessageBox']
  const ElNotification: typeof import('element-plus/es')['ElNotification']
  const InvokeTemplate: typeof import('../../utils/invokeTemplate')['InvokeTemplate']
  const RFormUtil: typeof import('../../utils/rendererForm')['RFormUtil']
  const SCRIPT_TEMPLATE: typeof import('../../utils/constant')['SCRIPT_TEMPLATE']
  const UTIL_DECLARE_STRING: typeof import('../../invokes/utilDeclareTypes')['UTIL_DECLARE_STRING']
  const adbCommands: typeof import('../../utils/adbCommands')['adbCommands']
  const appConfigApi: typeof import('../../api/appConfigApi')['appConfigApi']
  const astWorker: typeof import('../../utils/astWorker')['astWorker']
  const bottomRoutes: typeof import('../../router/routers')['bottomRoutes']
  const codeHighLight: typeof import('../../utils/codeHighLight')['codeHighLight']
  const computed: typeof import('vue')['computed']
  const copy: typeof import('../../utils/fs')['copy']
  const copyRectParam: typeof import('../../utils/copyTextToUser')['copyRectParam']
  const copyText: typeof import('../../utils/copyTextToUser')['copyText']
  const createApp: typeof import('vue')['createApp']
  const customRef: typeof import('vue')['customRef']
  const dataStructureUtils: typeof import('../../utils/dataStructure')['dataStructureUtils']
  const decompress: typeof import('../../utils/fs')['decompress']
  const defaultInvokeTemplateOptions: typeof import('../../utils/invokeTemplate')['defaultInvokeTemplateOptions']
  const defineAsyncComponent: typeof import('vue')['defineAsyncComponent']
  const defineComponent: typeof import('vue')['defineComponent']
  const editorActions: typeof import('../../utils/editorActions')['editorActions']
  const editorTsDeclaration: typeof import('../../invokes/apiDeclaration')['editorTsDeclaration']
  const effectScope: typeof import('vue')['effectScope']
  const eventUtil: typeof import('../../utils/eventUtil')['eventUtil']
  const execCommand: typeof import('../../utils/execCommand')['execCommand']
  const execCopy: typeof import('../../utils/copyTextToUser')['execCopy']
  const fsUtils: typeof import('../../utils/fs')['fsUtils']
  const getApiModules: typeof import('../../hooks/useCore')['getApiModules']
  const getCurrentInstance: typeof import('vue')['getCurrentInstance']
  const getCurrentScope: typeof import('vue')['getCurrentScope']
  const getDepStateType: typeof import('../../utils/libUtil')['getDepStateType']
  const getFileInfo: typeof import('../../hooks/useScriptApi')['getFileInfo']
  const getInvokeApiMethods: typeof import('../../hooks/useCore')['getInvokeApiMethods']
  const goLastPath: typeof import('../../router/index')['goLastPath']
  const h: typeof import('vue')['h']
  const inject: typeof import('vue')['inject']
  const invokeBaseApi: typeof import('../../utils/invokeBaseApi')['invokeBaseApi']
  const isProxy: typeof import('vue')['isProxy']
  const isReactive: typeof import('vue')['isReactive']
  const isReadonly: typeof import('vue')['isReadonly']
  const isRef: typeof import('vue')['isRef']
  const libUtil: typeof import('../../utils/libUtil')['libUtil']
  const logUtil: typeof import('../../utils/logUtil')['logUtil']
  const markRaw: typeof import('vue')['markRaw']
  const nextTick: typeof import('vue')['nextTick']
  const onActivated: typeof import('vue')['onActivated']
  const onBeforeMount: typeof import('vue')['onBeforeMount']
  const onBeforeRouteLeave: typeof import('vue-router')['onBeforeRouteLeave']
  const onBeforeRouteUpdate: typeof import('vue-router')['onBeforeRouteUpdate']
  const onBeforeUnmount: typeof import('vue')['onBeforeUnmount']
  const onBeforeUpdate: typeof import('vue')['onBeforeUpdate']
  const onDeactivated: typeof import('vue')['onDeactivated']
  const onErrorCaptured: typeof import('vue')['onErrorCaptured']
  const onMounted: typeof import('vue')['onMounted']
  const onRenderTracked: typeof import('vue')['onRenderTracked']
  const onRenderTriggered: typeof import('vue')['onRenderTriggered']
  const onScopeDispose: typeof import('vue')['onScopeDispose']
  const onServerPrefetch: typeof import('vue')['onServerPrefetch']
  const onUnmounted: typeof import('vue')['onUnmounted']
  const onUpdated: typeof import('vue')['onUpdated']
  const pathUtils: typeof import('../../utils/path')['pathUtils']
  const provide: typeof import('vue')['provide']
  const reactive: typeof import('vue')['reactive']
  const readClipboardFirstText: typeof import('../../utils/copyTextToUser')['readClipboardFirstText']
  const readonly: typeof import('vue')['readonly']
  const ref: typeof import('vue')['ref']
  const resolveComponent: typeof import('vue')['resolveComponent']
  const router: typeof import('../../router/index')['default']
  const routers: typeof import('../../router/routers')['default']
  const shallowReactive: typeof import('vue')['shallowReactive']
  const shallowReadonly: typeof import('vue')['shallowReadonly']
  const shallowRef: typeof import('vue')['shallowRef']
  const timeUtil: typeof import('../../utils/timeUtil')['timeUtil']
  const toRaw: typeof import('vue')['toRaw']
  const toRef: typeof import('vue')['toRef']
  const toRefs: typeof import('vue')['toRefs']
  const toValue: typeof import('vue')['toValue']
  const topRoutes: typeof import('../../router/routers')['topRoutes']
  const triggerRef: typeof import('vue')['triggerRef']
  const unref: typeof import('vue')['unref']
  const useAppGlobalSettings: typeof import('../../store/globalSettings')['useAppGlobalSettings']
  const useAppLayout: typeof import('../../hooks/useAppLayout')['useAppLayout']
  const useAppTheme: typeof import('../../hooks/useAppTheme')['useAppTheme']
  const useAppVersionInfo: typeof import('../../hooks/useAppVersionInfo')['useAppVersionInfo']
  const useAttrs: typeof import('vue')['useAttrs']
  const useAutoTitleBar: typeof import('../../hooks/useAutoTitleBar')['useAutoTitleBar']
  const useBuiltInApi: typeof import('../../hooks/useScriptApi')['useBuiltInApi']
  const useCodeSnippetSave: typeof import('../../hooks/useCodeSnippetSave')['useCodeSnippetSave']
  const useCore: typeof import('../../hooks/useCore')['useCore']
  const useCssModule: typeof import('vue')['useCssModule']
  const useCssVars: typeof import('vue')['useCssVars']
  const useDepInfo: typeof import('../../hooks/useDepInfo')['useDepInfo']
  const useEditor: typeof import('../../hooks/useEditor')['useEditor']
  const useGlobalShortcutsStore: typeof import('../../store/globalShortcutsStore')['useGlobalShortcutsStore']
  const useLink: typeof import('vue-router')['useLink']
  const useListStore: typeof import('../../store/listStore')['useListStore']
  const useLog: typeof import('../../hooks/useLog')['useLog']
  const useRoute: typeof import('vue-router')['useRoute']
  const useRouter: typeof import('vue-router')['useRouter']
  const useScriptApi: typeof import('../../hooks/useScriptApi')['useScriptApi']
  const useScriptInfo: typeof import('../../hooks/useScriptInfo')['useScriptInfo']
  const useScriptRuntime: typeof import('../../hooks/useScriptRuntime')['useScriptRuntime']
  const useScriptView: typeof import('../../hooks/useScriptApi')['useScriptView']
  const useSlots: typeof import('vue')['useSlots']
  const useSpark: typeof import('../../hooks/useSpark')['useSpark']
  const useWebviewWindow: typeof import('../../hooks/useWebviewWindow')['useWebviewWindow']
  const viteEnvD: typeof import('../../vite-env')['default']
  const watch: typeof import('vue')['watch']
  const watchEffect: typeof import('vue')['watchEffect']
  const watchPostEffect: typeof import('vue')['watchPostEffect']
  const watchSyncEffect: typeof import('vue')['watchSyncEffect']
}
// for type re-export
declare global {
  // @ts-ignore
  export type { Component, ComponentPublicInstance, ComputedRef, ExtractDefaultPropTypes, ExtractPropTypes, ExtractPublicPropTypes, InjectionKey, PropType, Ref, VNode, WritableComputedRef } from 'vue'
  import('vue')
}
